Date_timestamp          name,         unique_id,score,total,Time_Taken,answers_json,                                                                      detailed
2025-09-14 18:05:51,001,001,0,15,14,[2, null, 1, null, null, 1, null, null, null, 3, 1, null, null, null, null],[{"q": "Output?\npublic class Test {\n    public static void main(String[] args) {\n        String s1 = \"Java\";\n        String s2 = new String(\"Java\");\n        System.out.println(s1.equals(s2) + \" \" + (s1 == s2));\n    }\n}", "options": ["true true", "false true", "false false", "true false"], "correct_index": 3, "selected_index": 2, "marked": false, "visited": true}, {"q": "In Java, which of the following statements about the volatile keyword is correct?", "options": ["It guarantees atomicity for increment operations", "It makes a variable immutable", "It prevents threads from reading stale values and ensures visibility", "It automatically synchronizes methods accessing that variable"], "correct_index": 2, "selected_index": null, "marked": false, "visited": false}, {"q": "Output?\npublic class Main {\n    public static void main(String[] args) {\n        int a = 3;\n        int b = 2;\n        System.out.println(Math.pow(a, b) == Math.pow(b, a));\n    }\n}", "options": ["true", "8.0", "9.0", "false"], "correct_index": 3, "selected_index": 1, "marked": false, "visited": true}, {"q": "In Java metaclasses, what does __new__ method control?", "options": ["Creation of classes themselves", "Memory allocation for objects", "Creation of objects from classes", "Garbage collection of instances"], "correct_index": 0, "selected_index": null, "marked": false, "visited": true}, {"q": "Which data structure is best suited for implementing a priority queue?", "options": ["Heap", "Stack", "Binary Search Tree", "AVL Tree"], "correct_index": 0, "selected_index": null, "marked": false, "visited": false}, {"q": "Which data structure uses FIFO?", "options": ["Queue", "Graph", "Heap", "Stack"], "correct_index": 0, "selected_index": 1, "marked": false, "visited": true}, {"q": "In a Red-Black Tree, which of the following is always true?", "options": ["Red nodes cannot have black children", "Height = log₂(n) exactly", "The root is always black", "All leaves are red"], "correct_index": 2, "selected_index": null, "marked": false, "visited": false}, {"q": "Which operation removes the last inserted element in Stack?", "options": ["Dequeue", "Enqueue", "Pop", "Push"], "correct_index": 2, "selected_index": null, "marked": false, "visited": false}, {"q": "In a Trie, what is the worst-case time complexity to search for a word of length L?", "options": ["O(log n)", "O(1)", "O(n × L)", "O(L)"], "correct_index": 3, "selected_index": null, "marked": false, "visited": false}, {"q": "What is the primary role of Python’s asyncio library?", "options": ["Efficient asynchronous I/O and cooperative multitasking", "Automatic type checking at runtime", "Parallel execution on multiple CPU cores", "Thread-safe memory management"], "correct_index": 0, "selected_index": 3, "marked": false, "visited": true}, {"q": "In Python’s asyncio, what is the role of an event loop?", "options": ["It schedules and manages coroutines asynchronously", "It replaces multithreading in Python completely", "It compiles Python code to bytecode", "It creates multiple processes for parallel execution"], "correct_index": 0, "selected_index": 1, "marked": false, "visited": true}, {"q": "Output?\ndef fun(a, b=[]):\n    b.append(a)\n    return b\n\nprint(fun(1))\nprint(fun(2))", "options": ["[1], [2]", "[2], [1, 2]", "Error", "[1], [1, 2]"], "correct_index": 3, "selected_index": null, "marked": false, "visited": false}, {"q": "In the JVM, what is the role of the Metaspace memory area?", "options": ["Stores runtime heap objects", "Contains stack frames for each thread", "Stores all primitive types", "Holds Java class metadata and reflection data"], "correct_index": 3, "selected_index": null, "marked": false, "visited": false}, {"q": "What does Java’s sealed classes (introduced in Java 17) provide?", "options": ["Runtime performance boost", "Compile-time optimization of inheritance", "Automatic garbage collection", "Restriction on which classes can extend them"], "correct_index": 3, "selected_index": null, "marked": false, "visited": false}, {"q": "In a doubly linked list, each node contains:", "options": ["Data + pointer to previous", "Data + pointer to next", "Data + pointers to both next and previous", "Data only"], "correct_index": 2, "selected_index": null, "marked": false, "visited": false}]
